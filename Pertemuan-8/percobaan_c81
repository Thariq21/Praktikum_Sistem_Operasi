#!/bin/sh
# file : percobaan_c81
# Uses percobaan_a81 to generate some output and give us an
# exit status to capture.
# Get the exit status of percobaan_a81 into $percobaan_a81stat.
# stdout of percobaan_a81 is processed normally
# Save a copy of stdout
exec 3>&1
# Run a subshell, with 4 duplicated to 1 so we get it in stdout.
# Capture the output in ``
# percobaan_a81stat=`( ... ) 4>&1`
# Inside the subshell, run another subshell to execute percobaan_a81,
# and echo the status code to 4
# (./percobaan_a81; echo $? >&4)
# stdout from the inner subshell is processed normally, but the
# subsequent output must be directed to 3 so it goes to the
# original stdout and not be captured by the ``
percobaan_a81stat=`((./percobaan_a81; echo $? >&4) | grep 'foo' 1>&3) 4>&1`
echo Last command status=$?
echo percobaan_a81stat=$percobaan_a81stat
# If any of the commands really care about inheriting open file
# descriptors that they donâ€™t need then a more correct command line
# closes the descriptors before running the commands
exec 3>&1
percobaan_a81stat=`((./percobaan_a81 3>&- 4>&- ; echo $? >&4) | \grep 'foo' 1>&3 3>&- 4>&- ) 4>&1`
echo Last command status=$?
echo percobaan_a81=$percobaan_a81
